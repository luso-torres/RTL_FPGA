

// TOOL:     vlog2tf
// DATE:     Mon Jun 30 21:43:56 2025
 
// TITLE:    Lattice Semiconductor Corporation
// MODULE:   cordic_serial_abs
// DESIGN:   cordic_serial_abs
// FILENAME: cordic_serial_abs_tf.v
// PROJECT:  aula50_cordic
// VERSION:  2.0
// This file is auto generated by Diamond


`timescale 1 ns / 1 ps

// Define Module for Test Fixture
module cordic_serial_abs_tf();

// Inputs
    reg clk;
    reg rst;
    reg [15:0] data_X;
    reg [15:0] data_Y;
    reg [15:0] data_Z;



// Outputs
    wire [15:0] abs;
    wire [15:0] angle;
	wire clear_read;

// Bidirs


// Instantiate the UUT
// Please check and add your parameters manually
    cordic_serial_abs UUT (
        .clk(clk), 
        .rst(rst), 
        .data_X(data_X), 
        .data_Y(data_Y), 
        .data_Z(data_Z), 
        .abs(abs),
        .angle(angle),
        .clear_read(clear_read)
        );


initial begin
        clk = 0;
        forever #5 clk = ~clk;  // Toggle every 5ns
    end


// Initialize Inputs
// You can add your stimulus here
    initial begin
            clk = 0;
            rst = 0;
            data_X = 0;
            data_Y = 0;
            data_Z = 0;
			#5;
			rst =1;
			#5
			rst =0;
			data_X = 100;
			data_Y = 100;
			data_Z = 78*3.1415/180;
			#20;
			@(negedge clear_read==1);
			data_X = 287;
			data_Y = -31;
			data_Z = -78*3.1415/180;
			@(negedge clear_read==1);
			data_X = -152;
			data_Y = -358;
			data_Z = -90*3.1415/180;
			
			@(negedge clear_read==1);
			data_X = -181;
			data_Y = 500;
			data_Z = 90*3.1415/180;
			#20;
			@(negedge clear_read==1);
			$stop;
    end

endmodule // cordic_serial_abs_tf